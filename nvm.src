%include('html_intro.inc')
    <meta name="keywords" content="projects">
    <meta name="description" content="NCCS TechInt group thrust area">
    <title>Technology Integration Group: Non-Volatile Memory</title>
%include('hdbody.inc')

%include('hdrnav.inc')

%include('content_intro.inc')
<div class="overview">
In the following projects, we explore non-volatile memory devices from
several perspectives including fault tolerance, memory extension, and
out-of-core data analytics.
</div>
%include('content_close.inc')

%include('content_intro.inc')
<h2>Burst Buffers</h2>

Massively parallel scientific applications, running on extreme-scale
supercomputers, produce hundreds of terabytes of checkpoint snapshot
data per run, driving the need for storage solutions to improve their
I/O performance. Traditional parallel file systems (PFS) in high
performance computing (HPC) systems are unable to keep up with such
high data rates, creating a storage wall. Our goal in this effort is
to explore the construction of an SSD-based burst buffer solution that
is able to act as a performance impedance matching device by absorbing
application checkpoint data and seamlessly draining it to the PFS.

<p>Contributors: Doug Fuller, Sudharshan Vazhkudai, Dave Dillow, Sarp
Oral, Feiyi Wang, and James Simmons

%include('content_close.inc')

%include('content_intro.inc')
    <h2 id="NVMalloc" class="title"><a href="http://users.nccs.gov/~vazhkuda/NVMalloc.html" 
    target="_blank">NVMalloc</a></h2>


<p>DRAM is a precious resource in extreme-scale machines and is
increasingly becoming scarce, mainly due to the growing number of
cores per node. On future multi-petaflop and exaflop machines, the
memory pressure is likely to be so severe that we need to rethink our
memory usage models. Fortunately, the advent of non-volatile memory
(NVM) offers a unique opportunity in this space. Current NVM offerings
possess several desirable properties, such as low cost and power
efficiency, but also suffer from high latency and lifetime issues. We
need rich techniques to be able to use them alongside DRAM. NVMalloc
is an approach for exploiting NVM as a secondary memory partition so
that applications can explicitly allocate and manipulate memory
regions therein. More specifically, it is a middleware library with a
suite of services that enables applications to access node-local or
distributed NVM storage system in a seamless fashion. The work
inovolves several areas.


<ul>

  <li>Exploring NVM as a secondary memory partition for HPC systems 

  <li>Developing NVMalloc library with a suite of services that
  enables applications to access NVM systems

  <li>Studying the performance of NVMalloc with various HPC benchmark
  suits

  <li>Developing data management techniques to efficiently use the
  NVM partition and DRAM partition

</ul>

    <p>Contributors: Youngjae Kim, Chao Wang, and Sudharshan Vazhkudai


<ul>
  <li>Selected publications
    <ul>

      <li>Chao Wang, Sudharshan Vazhkudai, Xiaosong Ma, Fei Meng,
      Youngjae Kim, Christian Engelmann, "NVMalloc: Exposing an
      Aggregate SSD Store as a Memory Partition in Extreme-Scale
      Machines", <i>Proceedings of the 26th IEEE Int'l Parallel and
      Distributed Processing Symposium (IPDPS 2012), Shanghai, China,
      May 21-25, 2012. (118/569 = 20.7%)</i>

    </ul>
</ul>
%include('content_close.inc')

%include('content_intro.inc')
<h2 id="ActiveFlash">Active Flash</h2>

Modern scientific discovery is increasingly driven by large-scale
supercomputing simulations, followed by每data analysis tasks. These
data analyses are either performed offline, on smaller-scale clusters,
or on the uspercomputer itself. Unfortunately, these techniques sffer
from performance and energy inefficiencies due to increased data
movement between the compute and storage每subsystems. We propose Active
Flash, an in-situ scientific data analysis approach, wherein data
analysis is conducted on the solid-state device (SSD), where每the data
already resides.每Active Flash has the potential to enable true
out-of-core data analytics by freeing up both the compute core and the
associated main memory. The work involves several areas.

<ul>
  <li>Developing analytical models for the performance and energy
  feasibility of Active Flash, and comparing them against traditional
  in-situ and offline data analysis schemes

  <li>Building an Active Flash prototype to demonstrate its viability

  <li>Studying co-scheduling of analyses and internal flash management
  activities on the SSDs controller

  <li>Defining efficient representations of data object interfaces for
  Active Flash
</ul>

Contributors: Sudharshan Vazhkudai and Youngjae Kim

<ul>
  <li>Selected publications
    <ul>

      <li>Devesh Tiwari, Simona Bobila, Sudharshan Vazhkudai,
      Youngjae Kim, Xiaosong Ma, Peter Desnoyers, Yan Solin, "Active
      Flash: Towards Energy-Efficient, In-Situ Data Analytics on
      Extreme-Scale Machines,", <i>(To appear) Proceedings of the
      USENIX Conference on File and Storage Technologies (FAST 2013),
      February, 2013. (24/127 = 18.9%)</i>

      <li>Simona Boboila, Youngjae Kim, Sudharshan Vazhkudai, Peter
      Desnoyers, Galen M. Shipman, "Active Flash: Out-of-core Data
      Analytics on Flash Storage", <i>(Proceedings of the 28th IEEE
      Symposium on Massive Storage Systems and Technologies (MSST
      2012), Monterey, CA, April 16-20, 2012. (14/57 = 24.5%)</i>

    </ul>
</ul>
%include('content_close.inc')

%include('content_intro.inc')
<h2>Flash Storage Systems</h2>

Although SSDs offer significant performance improvements over hard
disk drives (HDDs) for a number of workloads, they can exhibit
substantial variance in request latency and throughput as a result of
garbage collection (GC). Thus, in this project, we explore design
challenges on SSD based storage systems. The work involves several
areas.

<ul>
  <li>Benchmarking SSDs and understanding their performance and behavior
  <li>Detailed performance modeling of SSDs for different HPC workloads 
  <li>Improving performance of individual SSDs and arrays of SSDs

  <li>Developing internal flash management algorithms (GC, FTL, etc)
  for high performance SSD based storage systems

</ul>

Contributors: Youngjae Kim, Sarp Oral, and Dave Dillow

<ul>
  <li>Selected publications
    <ul>

      <li>Youngjae Kim, Junghee Lee, Sarp Oral, David Dillow, Feiyi
      Wang, Galen M. Shipman, "Coordinating Garbage Collection for
      Arrays of Solid-state Drives", <i>(To appear) IEEE Transactions
      on Computers (IEEE TC), 2013.</i>

      <li>Junghee Lee, Youngjae Kim, Galen M. Shipman, Sarp Oral,
      Jongman Kim, "Preemptible I/O Scheduling of Garbage Collection
      for Solid-state Drives", <i>(To appear) IEEE Transactions on
      Computer-Aided Design of Integrated Circuits and Systems (IEEE
      TCAD), 2013.</i>

    </ul>
</ul>
%include('content_close.inc')
%include('html_close.inc')
